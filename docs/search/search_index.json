{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Kraken by OctoPerf? \u00b6 Kraken by OctoPerf a load testing IDE . As such, it lets you develop, debug, execute and analyze load tests . Kraken heavily relies on Docker . For its own architecture but also to run load testing tools. Currently, the only integrated load testing engine is Gatling , but Kraken is able to run any application that can fit in one (or several) Docker containers. Kraken also includes InfluxDB and Grafana to store and display test results. Downloading and Installation \u00b6 Kraken can be downloaded from our download page and installed on Linux or Windows thanks to Vagrant. Features Summary \u00b6 Once installed, Kraken comes with two frontend applications: The Gatling UI , to import, debug and run Gatling scripts, The Administration UI , to edit configuration files, run Docker containers and manage images. Gatling \u00b6 Kraken supports Gatling's script import, debug and execution: Import files : Gatling scripts (.scala) and resource files (CSV, body contents, etc.). Import HAR : Import HTTP Archives using Gatling Recorder. Debug scripts : Run Gatling's scripts with one current user only, list all request/response couples and compare them with HAR Import or previous executions. Scripts edition : Edit Gatling's scripts directly in your web browser, benefit from inline help, autocomplete and syntactic coloration. Scripts edition : Quickly run load tests thanks to custom Docker images. Analysis : Have a look at Gatling's HTML test reports in one click or display and edit automatically generated Grafana's dashboards. Administration \u00b6 Kraken's administration UI is a generic file editor / docker manager. Files tree : Upload, download, delete and edit any file managed by Kraken. Shell commands : Execute any shell command on the Docker host. Docker containers : Run, stop, display logs for all Docker containers present on the host machine. Docker images : List, pull, remove and purge all Docker images. Docker-compose : Quickly run docker-compose up/down commands for any docker-compose.yml file.","title":"Getting Started"},{"location":"#what-is-kraken-by-octoperf","text":"Kraken by OctoPerf a load testing IDE . As such, it lets you develop, debug, execute and analyze load tests . Kraken heavily relies on Docker . For its own architecture but also to run load testing tools. Currently, the only integrated load testing engine is Gatling , but Kraken is able to run any application that can fit in one (or several) Docker containers. Kraken also includes InfluxDB and Grafana to store and display test results.","title":"What is Kraken by OctoPerf?"},{"location":"#downloading-and-installation","text":"Kraken can be downloaded from our download page and installed on Linux or Windows thanks to Vagrant.","title":"Downloading and Installation"},{"location":"#features-summary","text":"Once installed, Kraken comes with two frontend applications: The Gatling UI , to import, debug and run Gatling scripts, The Administration UI , to edit configuration files, run Docker containers and manage images.","title":"Features Summary"},{"location":"#gatling","text":"Kraken supports Gatling's script import, debug and execution: Import files : Gatling scripts (.scala) and resource files (CSV, body contents, etc.). Import HAR : Import HTTP Archives using Gatling Recorder. Debug scripts : Run Gatling's scripts with one current user only, list all request/response couples and compare them with HAR Import or previous executions. Scripts edition : Edit Gatling's scripts directly in your web browser, benefit from inline help, autocomplete and syntactic coloration. Scripts edition : Quickly run load tests thanks to custom Docker images. Analysis : Have a look at Gatling's HTML test reports in one click or display and edit automatically generated Grafana's dashboards.","title":"Gatling"},{"location":"#administration","text":"Kraken's administration UI is a generic file editor / docker manager. Files tree : Upload, download, delete and edit any file managed by Kraken. Shell commands : Execute any shell command on the Docker host. Docker containers : Run, stop, display logs for all Docker containers present on the host machine. Docker images : List, pull, remove and purge all Docker images. Docker-compose : Quickly run docker-compose up/down commands for any docker-compose.yml file.","title":"Administration"},{"location":"download/","text":"Kraken Download Page \u00b6 Latest Version \u00b6 Kraken 1.0.0","title":"Download"},{"location":"download/#kraken-download-page","text":"","title":"Kraken Download Page"},{"location":"download/#latest-version","text":"Kraken 1.0.0","title":"Latest Version"},{"location":"install/linux/","text":"Kraken Linux Installation \u00b6 Pre-Requisites \u00b6 Docker \u00b6 Kraken runs on Docker. Please install at least Docker CE version 18.09.6 . Instructions for Ubuntu (and other Linux distributions) can be found on Docker's Linux installation manual page . Docker-compose \u00b6 Please install at least docker-compose version 1.23.1 . Instructions can be found on Docker's docker-compose installation manual page . Warning Kraken's script runs docker-compose as a non root user. So please follow the post installation instructions to manage Docker as a non-root user. Download Instructions \u00b6 Kraken is packaged as a zip archive that contains: A kraken.sh start script, An uninstall.sh script, Configuration files for docker-compose and its various docker components. Please download and extract the latest version of Kraken by OctoPerf . Installation Instructions \u00b6 In the extracted archive folder, execute the kraken.sh script as a non-root user . This scripts initializes some environment variables and then runs docker-compose up using the included docker-compose.yml file. Once every Docker container has started, you can: Access the Administration application at http://localhost:80/administration Access the Gatling application at http://localhost:80/gatling Post Installation Instructions \u00b6 Once Kraken is running, a folder named data should be created in the installation directory. This data folder contains all default Gatling scripts and configuration files. You can synchronize it on Git or any other version-control system to keep track of your work. Info If you wish to remove Kraken from your system, simply run the uninstall.sh script. It will stop and remove all Docker containers and clear the data folder. Tip You can also execute the command docker-compose down to remove Kraken's Docker containers but keep the content of the data folder.","title":"Linux"},{"location":"install/linux/#kraken-linux-installation","text":"","title":"Kraken Linux Installation"},{"location":"install/linux/#pre-requisites","text":"","title":"Pre-Requisites"},{"location":"install/linux/#docker","text":"Kraken runs on Docker. Please install at least Docker CE version 18.09.6 . Instructions for Ubuntu (and other Linux distributions) can be found on Docker's Linux installation manual page .","title":"Docker"},{"location":"install/linux/#docker-compose","text":"Please install at least docker-compose version 1.23.1 . Instructions can be found on Docker's docker-compose installation manual page . Warning Kraken's script runs docker-compose as a non root user. So please follow the post installation instructions to manage Docker as a non-root user.","title":"Docker-compose"},{"location":"install/linux/#download-instructions","text":"Kraken is packaged as a zip archive that contains: A kraken.sh start script, An uninstall.sh script, Configuration files for docker-compose and its various docker components. Please download and extract the latest version of Kraken by OctoPerf .","title":"Download Instructions"},{"location":"install/linux/#installation-instructions","text":"In the extracted archive folder, execute the kraken.sh script as a non-root user . This scripts initializes some environment variables and then runs docker-compose up using the included docker-compose.yml file. Once every Docker container has started, you can: Access the Administration application at http://localhost:80/administration Access the Gatling application at http://localhost:80/gatling","title":"Installation Instructions"},{"location":"install/linux/#post-installation-instructions","text":"Once Kraken is running, a folder named data should be created in the installation directory. This data folder contains all default Gatling scripts and configuration files. You can synchronize it on Git or any other version-control system to keep track of your work. Info If you wish to remove Kraken from your system, simply run the uninstall.sh script. It will stop and remove all Docker containers and clear the data folder. Tip You can also execute the command docker-compose down to remove Kraken's Docker containers but keep the content of the data folder.","title":"Post Installation Instructions"},{"location":"install/windows/","text":"Kraken Windows Installation \u00b6 Pre-Requisites \u00b6 Kraken uses Docker. The easiest way to test it on Windows is to use Vagrant by HashiCorp . Virtual Box by Oracle \u00b6 Please download and install VirtualBox (version 6.0.8 or newer). Vagrant \u00b6 Please download and install Vagrant (version 2.2.4 or newer). Download Instructions \u00b6 Kraken is packaged as a zip archive that contains: A kraken-vagrant.sh start script, A Vagrantfile configuration file, Configuration files for docker-compose and its various docker components. Please download and extract the latest version of Kraken by OctoPerf . Installation Instructions \u00b6 In the extracted archive folder, execute the vagrant up command . This will provision an Ubuntu virtual machine and then install Kraken on it. Once every the VM is running and every Docker container has started, you can: Access the Administration application at http://localhost:8080/administration Access the Gatling application at http://localhost:8080/gatling","title":"Windows"},{"location":"install/windows/#kraken-windows-installation","text":"","title":"Kraken Windows Installation"},{"location":"install/windows/#pre-requisites","text":"Kraken uses Docker. The easiest way to test it on Windows is to use Vagrant by HashiCorp .","title":"Pre-Requisites"},{"location":"install/windows/#virtual-box-by-oracle","text":"Please download and install VirtualBox (version 6.0.8 or newer).","title":"Virtual Box by Oracle"},{"location":"install/windows/#vagrant","text":"Please download and install Vagrant (version 2.2.4 or newer).","title":"Vagrant"},{"location":"install/windows/#download-instructions","text":"Kraken is packaged as a zip archive that contains: A kraken-vagrant.sh start script, A Vagrantfile configuration file, Configuration files for docker-compose and its various docker components. Please download and extract the latest version of Kraken by OctoPerf .","title":"Download Instructions"},{"location":"install/windows/#installation-instructions","text":"In the extracted archive folder, execute the vagrant up command . This will provision an Ubuntu virtual machine and then install Kraken on it. Once every the VM is running and every Docker container has started, you can: Access the Administration application at http://localhost:8080/administration Access the Gatling application at http://localhost:8080/gatling","title":"Installation Instructions"}]}