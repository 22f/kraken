plugins {
    // Build scans
    id 'com.gradle.build-scan' version '2.3'

    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    // Required by lombok
    id 'net.ltgt.apt' version '0.21'
    id 'com.github.spotbugs' version '2.0.0'
//    Uncomment only to get license info : https://github.com/hierynomus/license-gradle-plugin/issues/161
//    id 'com.github.hierynomus.license-report' version '0.15.0'

//    https://github.com/ben-manes/gradle-versions-plugin
    id "com.github.ben-manes.versions" version "0.21.0"
}

allprojects {
    apply plugin: 'jacoco'

    group = 'com.kraken'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        maven {
            url "http://www.license4j.com/maven/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    jacoco {
        toolVersion = '0.8.2'
    }
}

subprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    ext {
        springBootVersion = '2.1.6.RELEASE'
        springReactorVersion = '3.2.10.RELEASE'
        lombokVersion = '1.18.8'
        guavaVersion = '28.0-jre'
        equalsVerifierVersion = '3.1.9'
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'net.ltgt.apt'
    apply plugin: 'com.github.spotbugs'

    sourceCompatibility = 11

    dependencies {
        // Spring boot
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: springBootVersion
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
        // https://mvnrepository.com/artifact/io.projectreactor/reactor-test
        testCompile group: 'io.projectreactor', name: 'reactor-test', version: springReactorVersion

        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion

        // Lombok
        implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

        // https://mvnrepository.com/artifact/com.google.guava/guava
        implementation group: 'com.google.guava', name: 'guava', version: guavaVersion
        // https://mvnrepository.com/artifact/com.google.guava/guava-testlib
        testImplementation group: 'com.google.guava', name: 'guava-testlib', version: guavaVersion

        // https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier
        testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: equalsVerifierVersion
        // https://mvnrepository.com/artifact/com.google.code.findbugs/annotations
        compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

        testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.0'
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    }

    configurations {
        testArtifacts.extendsFrom testRuntime
    }
    
    task testJar(type: Jar) {
        archiveClassifier.set('test')
        from sourceSets.test.output
    }
    
    artifacts {
        testArtifacts testJar
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }

    check.dependsOn jacocoTestReport

    spotbugsMain {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    spotbugsTest {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.dependsOn spotbugsMain

    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn = subprojects.test
    getAdditionalSourceDirs().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getSourceDirectories().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getClassDirectories().setFrom(files(subprojects.sourceSets.main.output))
    getExecutionData().setFrom(files(subprojects.jacocoTestReport.executionData))
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        getExecutionData().setFrom(files(executionData.findAll {
            it.exists()
        }))
    }
}